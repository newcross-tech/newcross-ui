name: Publish Version
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  FONTAWESOME_NPM_TOKEN: ${{ secrets.FONTAWESOME_NPM_TOKEN }}
  PUBLISH_PACKAGES_PAT: ${{ secrets.GH_PACKAGES_SHARED_PAT }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Build
        run: |
          yarn install
          yarn build
      - uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            packages/**/build/**
            packages/react/styles.css

  publish:
    permissions:
      packages: write
      contents: read
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - name: Setup Git
        uses: newcross-tech/git-auth-config-action@v1-5
        with:
          token: ${{ secrets.GH_REPO_SHARED_PAT }}
          repository: ${{ github.repository }}
      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PREVIOUS_RELEASE_TAG=$(git describe --abbrev=0 --tags)
          echo $PREVIOUS_RELEASE_TAG
          echo "PREVIOUS_RELEASE_TAG=$PREVIOUS_RELEASE_TAG" >> $GITHUB_ENV

          npx lerna publish --yes

          export LATEST_RELEASE_TAG=$(git describe --abbrev=0 --tags)
          echo $LATEST_RELEASE_TAG
          echo "LATEST_RELEASE_TAG=$LATEST_RELEASE_TAG" >> $GITHUB_ENV
      - id: create-release-notes
        name: Create Release Notes
        uses: newcross-tech/release-notes-action@v1
        with:
          service-name: ${{ github.event.repository.name }}
          source-tag: ${{ env.PREVIOUS_RELEASE_TAG }}
          target-tag: ${{ env.LATEST_RELEASE_TAG }}
          git-pat: ${{ secrets.GH_REPO_SHARED_PAT }}
          jira-user: ${{ vars.RELEASE_NOTES_JIRA_USER }}
          jira-pat: ${{ secrets.RELEASE_NOTES_JIRA_PAT }}
